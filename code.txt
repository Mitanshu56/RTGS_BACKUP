# create_form_final_compact_header.py
# This version removes the space in the header for a more compact look.
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import inch
from reportlab.platypus import Table, TableStyle, Paragraph
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib import colors
from reportlab.lib.enums import TA_CENTER, TA_LEFT

def create_compact_header_form():
    """
    Generates a PDF where the header spacing is reduced for a more compact look.
    """
    # 1. --- Document Setup ---
    c = canvas.Canvas("rtgs_form_compact_header.pdf", pagesize=A4)
    width, height = A4

    # 2. --- Define Paragraph Styles ---
    styles = getSampleStyleSheet()
    header_style = ParagraphStyle('header', parent=styles['Normal'], fontName='Helvetica-Bold', fontSize=10, alignment=TA_CENTER, spaceAfter=2)
    underlined_style = ParagraphStyle('underline_header', parent=header_style, fontSize=9)
    underlined_style.textColor = colors.blue
    section_style = ParagraphStyle('section', parent=header_style, fontName='Helvetica-Bold', fontSize=9, spaceBefore=6, spaceAfter=6)
    label_style = ParagraphStyle('label', parent=styles['Normal'], fontName='Helvetica', fontSize=9, alignment=TA_LEFT)
    footer_style = ParagraphStyle('footer', parent=styles['Normal'], fontName='Helvetica', fontSize=8, alignment=TA_LEFT)
    disclaimer_style = ParagraphStyle('disclaimer', parent=footer_style, alignment=TA_CENTER)

    # 3. --- Draw the Header Manually (as separate text) ---
    y_pos = height - 1 * inch # Starting y-position
    
    c.setFont('Helvetica-Bold', 10)
    c.drawCentredString(width / 2.0, y_pos, 'RTGS')
    y_pos -= 0.2 * inch
    
    c.setFont('Helvetica-Bold', 10)
    c.drawCentredString(width / 2.0, y_pos, 'Prime Co-op. Bank Ltd')
    y_pos -= 0.2 * inch
    
    c.setFont('Helvetica-Bold', 9)
    c.drawCentredString(width / 2.0, y_pos, 'JAHANGIRPURA Branch')
    y_pos -= 0.2 * inch

    p_underline = Paragraph('<u>NEFT/RTGS Applications From</u>', underlined_style)
    p_underline.wrapOn(c, width, height)
    p_underline.drawOn(c, 0, y_pos)
    
    # --- MODIFIED: Reduced this value to remove the space ---
    y_pos -= 0.2 * inch 

    c.setFont('Helvetica-Bold', 9)
    c.drawCentredString(width / 2.0, y_pos, "Remitter's/Initiator's Information")

    # --- Space below the header ---
    y_pos -= 0.35 * inch

    # 4. --- Prepare Data for the TWO Tables ---

    # --- Data for the TOP table ---
    form_data_top = [
        [Paragraph('Account with Branch', label_style), ''],
        [Paragraph("Name of Remitter/s", label_style), ''],
        [Paragraph("A/C No. of Remitter/s", label_style), ''],
        [Paragraph("Mobile No of Remitter/s", label_style), ''],
        [Paragraph('Pan No', label_style), ''],
        [Paragraph('Signature of Remitter/s', label_style), '[X]\n[X]'],
        [Paragraph('Cheque No.', label_style), ''],
    ]

    # --- Data for the BOTTOM table ---
    form_data_bottom = [
        [Paragraph("Beneficiary's Information", section_style)],
        [Paragraph("Beneficiary Party's Name", label_style), ''],
        [Paragraph('Beneficiary Bank', label_style), ''],
        [Paragraph('Beneficiary A/C No', label_style), ''],
        [Paragraph("Beneficiary Bank's Branch & its<br/>Address", label_style), ''],
        [Paragraph("Beneficiary Bank's IFSC Code", label_style), ''],
        [Paragraph('Amount In Figure', label_style), ''],
        [Paragraph('Amount In Words', label_style), ''],
        [Paragraph("if available, please submit<br/>Beneficiary party's Pan Card No", label_style), ''],
        [Paragraph('Mobile No', label_style), ''],
        [Paragraph("--> Please ensure all above information filled correctly bank is not responsible for it <--", disclaimer_style)],
        [Paragraph("""All the input provided above including beneficiary's name are as per bank record & I/We here by
                   authorize you to debit my account and proceed further for NEFT/RTGS/Electronic Fund Trf.""", footer_style)],
        [Paragraph('[X]__________________<br/><br/>[X]__________________', footer_style)],
        [Paragraph("For Bank Use Only", section_style)],
        [Paragraph('Posted By', label_style), Paragraph('Verified By', label_style)],
    ]

    # 5. --- Create and Draw the TOP Table ---
    col_widths = [2.7*inch, 4.3*inch]
    table_top = Table(form_data_top, colWidths=col_widths, rowHeights=None)
    table_top.setStyle(TableStyle([
        ('GRID', (0, 0), (-1, -1), 0.5, colors.black),
        ('VALIGN', (0, 0), (-1, -1), 'MIDDLE'),
        ('LEFTPADDING', (0, 0), (-1, -1), 5),
        ('RIGHTPADDING', (0, 0), (-1, -1), 5),
    ]))

    table_width, table_height = table_top.wrapOn(c, width, height)
    x_pos = (width - table_width) / 2
    y_pos -= table_height 
    table_top.drawOn(c, x_pos, y_pos)

    # --- Space between the two tables ---
    y_pos -= 0.25 * inch

    # 6. --- Create and Draw the BOTTOM Table ---
    table_bottom = Table(form_data_bottom, colWidths=col_widths, rowHeights=None)
    table_bottom.setStyle(TableStyle([
        ('GRID', (0, 0), (-1, -1), 0.5, colors.black),
        ('VALIGN', (0, 0), (-1, -1), 'MIDDLE'),
        ('SPAN', (0, 0), (1, 0)),
        ('SPAN', (0, 10), (1, 10)),
        ('SPAN', (0, 11), (1, 11)),
        ('SPAN', (0, 12), (1, 12)),
        ('SPAN', (0, 13), (1, 13)),
        ('LEFTPADDING', (0, 0), (-1, -1), 5),
        ('RIGHTPADDING', (0, 0), (-1, -1), 5),
        ('TOPPADDING', (0, 11), (1, 11), 10),
        ('BOTTOMPADDING', (0, 12), (1, 12), 10),
    ]))
    
    table_width, table_height = table_bottom.wrapOn(c, width, height)
    y_pos -= table_height
    table_bottom.drawOn(c, x_pos, y_pos)

    # Add the small checkbox, positioned relative to the bottom table
    num_rows_bottom = len(form_data_bottom)
    checkbox_y = y_pos + table_height - (table_height / num_rows_bottom) * 0.5
    c.rect(x_pos + table_width + 0.1*inch, checkbox_y, 0.15*inch, 0.15*inch)

    # 7. --- Save the PDF ---
    c.showPage()
    c.save()
    print("âœ… PDF 'rtgs_form_compact_header.pdf' created successfully!")

# Execute the function
if __name__ == '__main__':
    create_compact_header_form()